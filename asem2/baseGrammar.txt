<STATMENT>	int ident <COL> <VARDECLM> ;	string ident <COL> <VARDECLM> ;	ident <VARORATRIBUT>	<PRINTSTAT> ;	<READSTAT> ;	<RETURNSTAT> ;	<SUPERSTAT> ;	<IFSTAT>	<FORSTAT>	{ <STATLIST> }	break ;
<COL>	[] <COL>	&
<VARDECLM>	<VIRGULA> <VARDECLM>	&
<VARORATRIBUT>	ident <COL> <VARDECLM> ;	<LVALUE> = <ATRIBUTSTATSS> ;
<PRINTSTAT>	print <NUMEXPRESSION>
<READSTAT>	read ident <LVALUE>
<RETURNSTAT>	return <RETURNSTATEXPRESS>
<SUPERSTAT>	super ( <ARGLIST> )
<IFSTAT>	if ( <NUMEXPRESSION> ) { <STATMENT> }	ifelse ( <NUMEXPRESSION> ) { <STATMENT> } else { <STATMENT> }
<FORSTAT>	for ( <ATRIBSTAT> ; <NUMEXPRESSION> ; <ATRIBSTAT> ) { <STATMENT> }
<STATLIST>	<STATMENT> <STATLISTAS>
<VIRGULA>	, ident <COL>
<LVALUE>	[ <NUMEXPRESSION> ] <LVALUE>	. ident <LVALUEX>	&
<ATRIBUTSTATSS>	<NUMEXPRESSION>	<ALOCEXPRESSION>
<RETURNSTATEXPRESS>	<NUMEXPRESSION>	&
<ARGLIST>	<NUMEXPRESSION> <ARGLISTS>	&
<ATRIBSTAT>	ident = <NUMEXPRESSION>
<STATLISTAS>	<STATLIST>	&
<LVALUEX>	( <ARGLIST> ) <LVALUE>	<LVALUE>
<ALOCEXPRESSION>	new <ALOCEXPRESSIONX>
<ARGLISTS>	, <NUMEXPRESSION> <ARGLISTS>	&
<ALOCEXPRESSIONX>	ident <ALOCEXPRESSIONZ>	int-constant <EXPRESSIONS>	string <EXPRESSIONS>
<ALOCEXPRESSIONZ>	( <ARGLIST> )	<EXPRESSIONS>
<EXPRESSIONS>	[ <NUMEXPRESSION> ] <EXPRESSIONX>
<EXPRESSIONX>	<EXPRESSIONS>	&
<NUMEXPRESSION>	<TERM> <TERMS>
<TERMS>	+ <TERM> <TERMS>	- <TERM> <TERMS>	&
<TERM>	<UNARYEXPR> <UNARYEXPRS>
<UNARYEXPRS>	* <UNARYEXPR> <UNARYEXPRS>	/ <UNARYEXPR> <UNARYEXPRS>	% <UNARYEXPR> <UNARYEXPRS>	&
<UNARYEXPR>	+ <FACTOR>	- <FACTOR>	<FACTOR>
<FACTOR>	int-constant	string-constant	null	ident <LVALUE>	( <NUMEXPRESSION> )
